/* soapH.h
   Generated by gSOAP 2.8.41 for csoapapi.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__boolean_DEFINED
#define SOAP_TYPE_xsd__boolean_DEFINED

#ifdef SOAP_DEFAULT_xsd__boolean
#define soap_default_xsd__boolean(soap, a) (*(a) = SOAP_DEFAULT_xsd__boolean)
#else
#define soap_default_xsd__boolean(soap, a) (*(a) = (enum xsd__boolean)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, enum xsd__boolean);
SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum xsd__boolean *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, enum xsd__boolean *);

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_new_xsd__boolean(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__boolean
#define soap_PUT_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_xsd__boolean
#define soap_POST_send_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__boolean
#define soap_GET_xsd__boolean(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__boolean(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_xsd__boolean
#define soap_POST_recv_xsd__boolean(soap, data) ( soap_read_xsd__boolean(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE_ns1__recieveOKSOAP_DEFINED
#define SOAP_TYPE_ns1__recieveOKSOAP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__recieveOKSOAP(struct soap*, struct ns1__recieveOKSOAP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__recieveOKSOAP(struct soap*, const struct ns1__recieveOKSOAP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__recieveOKSOAP(struct soap*, const char*, int, const struct ns1__recieveOKSOAP *, const char*);
SOAP_FMAC3 struct ns1__recieveOKSOAP * SOAP_FMAC4 soap_in_ns1__recieveOKSOAP(struct soap*, const char*, struct ns1__recieveOKSOAP *, const char*);

SOAP_FMAC3 struct ns1__recieveOKSOAP * SOAP_FMAC4 soap_new_ns1__recieveOKSOAP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__recieveOKSOAP(struct soap*, const struct ns1__recieveOKSOAP *, const char*, const char*);

#ifndef soap_write_ns1__recieveOKSOAP
#define soap_write_ns1__recieveOKSOAP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__recieveOKSOAP(soap, data), 0) || soap_put_ns1__recieveOKSOAP(soap, data, "ns1:recieveOKSOAP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__recieveOKSOAP
#define soap_PUT_ns1__recieveOKSOAP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__recieveOKSOAP(soap, data), 0) || soap_put_ns1__recieveOKSOAP(soap, data, "ns1:recieveOKSOAP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__recieveOKSOAP
#define soap_POST_send_ns1__recieveOKSOAP(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__recieveOKSOAP(soap, data), 0) || soap_put_ns1__recieveOKSOAP(soap, data, "ns1:recieveOKSOAP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__recieveOKSOAP * SOAP_FMAC4 soap_get_ns1__recieveOKSOAP(struct soap*, struct ns1__recieveOKSOAP *, const char*, const char*);

#ifndef soap_read_ns1__recieveOKSOAP
#define soap_read_ns1__recieveOKSOAP(soap, data) ( ((data) ? (soap_default_ns1__recieveOKSOAP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__recieveOKSOAP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__recieveOKSOAP
#define soap_GET_ns1__recieveOKSOAP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__recieveOKSOAP(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__recieveOKSOAP
#define soap_POST_recv_ns1__recieveOKSOAP(soap, data) ( soap_read_ns1__recieveOKSOAP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__recieveOKSOAPResponse_DEFINED
#define SOAP_TYPE_ns1__recieveOKSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__recieveOKSOAPResponse(struct soap*, struct ns1__recieveOKSOAPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__recieveOKSOAPResponse(struct soap*, const struct ns1__recieveOKSOAPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__recieveOKSOAPResponse(struct soap*, const char*, int, const struct ns1__recieveOKSOAPResponse *, const char*);
SOAP_FMAC3 struct ns1__recieveOKSOAPResponse * SOAP_FMAC4 soap_in_ns1__recieveOKSOAPResponse(struct soap*, const char*, struct ns1__recieveOKSOAPResponse *, const char*);

SOAP_FMAC3 struct ns1__recieveOKSOAPResponse * SOAP_FMAC4 soap_new_ns1__recieveOKSOAPResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__recieveOKSOAPResponse(struct soap*, const struct ns1__recieveOKSOAPResponse *, const char*, const char*);

#ifndef soap_write_ns1__recieveOKSOAPResponse
#define soap_write_ns1__recieveOKSOAPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__recieveOKSOAPResponse(soap, data), 0) || soap_put_ns1__recieveOKSOAPResponse(soap, data, "ns1:recieveOKSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__recieveOKSOAPResponse
#define soap_PUT_ns1__recieveOKSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__recieveOKSOAPResponse(soap, data), 0) || soap_put_ns1__recieveOKSOAPResponse(soap, data, "ns1:recieveOKSOAPResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__recieveOKSOAPResponse
#define soap_POST_send_ns1__recieveOKSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__recieveOKSOAPResponse(soap, data), 0) || soap_put_ns1__recieveOKSOAPResponse(soap, data, "ns1:recieveOKSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__recieveOKSOAPResponse * SOAP_FMAC4 soap_get_ns1__recieveOKSOAPResponse(struct soap*, struct ns1__recieveOKSOAPResponse *, const char*, const char*);

#ifndef soap_read_ns1__recieveOKSOAPResponse
#define soap_read_ns1__recieveOKSOAPResponse(soap, data) ( ((data) ? (soap_default_ns1__recieveOKSOAPResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__recieveOKSOAPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__recieveOKSOAPResponse
#define soap_GET_ns1__recieveOKSOAPResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__recieveOKSOAPResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__recieveOKSOAPResponse
#define soap_POST_recv_ns1__recieveOKSOAPResponse(soap, data) ( soap_read_ns1__recieveOKSOAPResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__sendLogHashCipherSOAP_DEFINED
#define SOAP_TYPE_ns1__sendLogHashCipherSOAP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendLogHashCipherSOAP(struct soap*, struct ns1__sendLogHashCipherSOAP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendLogHashCipherSOAP(struct soap*, const struct ns1__sendLogHashCipherSOAP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendLogHashCipherSOAP(struct soap*, const char*, int, const struct ns1__sendLogHashCipherSOAP *, const char*);
SOAP_FMAC3 struct ns1__sendLogHashCipherSOAP * SOAP_FMAC4 soap_in_ns1__sendLogHashCipherSOAP(struct soap*, const char*, struct ns1__sendLogHashCipherSOAP *, const char*);

SOAP_FMAC3 struct ns1__sendLogHashCipherSOAP * SOAP_FMAC4 soap_new_ns1__sendLogHashCipherSOAP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendLogHashCipherSOAP(struct soap*, const struct ns1__sendLogHashCipherSOAP *, const char*, const char*);

#ifndef soap_write_ns1__sendLogHashCipherSOAP
#define soap_write_ns1__sendLogHashCipherSOAP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendLogHashCipherSOAP(soap, data), 0) || soap_put_ns1__sendLogHashCipherSOAP(soap, data, "ns1:sendLogHashCipherSOAP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__sendLogHashCipherSOAP
#define soap_PUT_ns1__sendLogHashCipherSOAP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__sendLogHashCipherSOAP(soap, data), 0) || soap_put_ns1__sendLogHashCipherSOAP(soap, data, "ns1:sendLogHashCipherSOAP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__sendLogHashCipherSOAP
#define soap_POST_send_ns1__sendLogHashCipherSOAP(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__sendLogHashCipherSOAP(soap, data), 0) || soap_put_ns1__sendLogHashCipherSOAP(soap, data, "ns1:sendLogHashCipherSOAP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendLogHashCipherSOAP * SOAP_FMAC4 soap_get_ns1__sendLogHashCipherSOAP(struct soap*, struct ns1__sendLogHashCipherSOAP *, const char*, const char*);

#ifndef soap_read_ns1__sendLogHashCipherSOAP
#define soap_read_ns1__sendLogHashCipherSOAP(soap, data) ( ((data) ? (soap_default_ns1__sendLogHashCipherSOAP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__sendLogHashCipherSOAP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__sendLogHashCipherSOAP
#define soap_GET_ns1__sendLogHashCipherSOAP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__sendLogHashCipherSOAP(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__sendLogHashCipherSOAP
#define soap_POST_recv_ns1__sendLogHashCipherSOAP(soap, data) ( soap_read_ns1__sendLogHashCipherSOAP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__sendLogHashCipherSOAPResponse_DEFINED
#define SOAP_TYPE_ns1__sendLogHashCipherSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendLogHashCipherSOAPResponse(struct soap*, struct ns1__sendLogHashCipherSOAPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendLogHashCipherSOAPResponse(struct soap*, const struct ns1__sendLogHashCipherSOAPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendLogHashCipherSOAPResponse(struct soap*, const char*, int, const struct ns1__sendLogHashCipherSOAPResponse *, const char*);
SOAP_FMAC3 struct ns1__sendLogHashCipherSOAPResponse * SOAP_FMAC4 soap_in_ns1__sendLogHashCipherSOAPResponse(struct soap*, const char*, struct ns1__sendLogHashCipherSOAPResponse *, const char*);

SOAP_FMAC3 struct ns1__sendLogHashCipherSOAPResponse * SOAP_FMAC4 soap_new_ns1__sendLogHashCipherSOAPResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendLogHashCipherSOAPResponse(struct soap*, const struct ns1__sendLogHashCipherSOAPResponse *, const char*, const char*);

#ifndef soap_write_ns1__sendLogHashCipherSOAPResponse
#define soap_write_ns1__sendLogHashCipherSOAPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendLogHashCipherSOAPResponse(soap, data), 0) || soap_put_ns1__sendLogHashCipherSOAPResponse(soap, data, "ns1:sendLogHashCipherSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__sendLogHashCipherSOAPResponse
#define soap_PUT_ns1__sendLogHashCipherSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__sendLogHashCipherSOAPResponse(soap, data), 0) || soap_put_ns1__sendLogHashCipherSOAPResponse(soap, data, "ns1:sendLogHashCipherSOAPResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__sendLogHashCipherSOAPResponse
#define soap_POST_send_ns1__sendLogHashCipherSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__sendLogHashCipherSOAPResponse(soap, data), 0) || soap_put_ns1__sendLogHashCipherSOAPResponse(soap, data, "ns1:sendLogHashCipherSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendLogHashCipherSOAPResponse * SOAP_FMAC4 soap_get_ns1__sendLogHashCipherSOAPResponse(struct soap*, struct ns1__sendLogHashCipherSOAPResponse *, const char*, const char*);

#ifndef soap_read_ns1__sendLogHashCipherSOAPResponse
#define soap_read_ns1__sendLogHashCipherSOAPResponse(soap, data) ( ((data) ? (soap_default_ns1__sendLogHashCipherSOAPResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__sendLogHashCipherSOAPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__sendLogHashCipherSOAPResponse
#define soap_GET_ns1__sendLogHashCipherSOAPResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__sendLogHashCipherSOAPResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__sendLogHashCipherSOAPResponse
#define soap_POST_recv_ns1__sendLogHashCipherSOAPResponse(soap, data) ( soap_read_ns1__sendLogHashCipherSOAPResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__sendCipherInonsenseSOAP_DEFINED
#define SOAP_TYPE_ns1__sendCipherInonsenseSOAP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendCipherInonsenseSOAP(struct soap*, struct ns1__sendCipherInonsenseSOAP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendCipherInonsenseSOAP(struct soap*, const struct ns1__sendCipherInonsenseSOAP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendCipherInonsenseSOAP(struct soap*, const char*, int, const struct ns1__sendCipherInonsenseSOAP *, const char*);
SOAP_FMAC3 struct ns1__sendCipherInonsenseSOAP * SOAP_FMAC4 soap_in_ns1__sendCipherInonsenseSOAP(struct soap*, const char*, struct ns1__sendCipherInonsenseSOAP *, const char*);

SOAP_FMAC3 struct ns1__sendCipherInonsenseSOAP * SOAP_FMAC4 soap_new_ns1__sendCipherInonsenseSOAP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendCipherInonsenseSOAP(struct soap*, const struct ns1__sendCipherInonsenseSOAP *, const char*, const char*);

#ifndef soap_write_ns1__sendCipherInonsenseSOAP
#define soap_write_ns1__sendCipherInonsenseSOAP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendCipherInonsenseSOAP(soap, data), 0) || soap_put_ns1__sendCipherInonsenseSOAP(soap, data, "ns1:sendCipherInonsenseSOAP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__sendCipherInonsenseSOAP
#define soap_PUT_ns1__sendCipherInonsenseSOAP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__sendCipherInonsenseSOAP(soap, data), 0) || soap_put_ns1__sendCipherInonsenseSOAP(soap, data, "ns1:sendCipherInonsenseSOAP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__sendCipherInonsenseSOAP
#define soap_POST_send_ns1__sendCipherInonsenseSOAP(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__sendCipherInonsenseSOAP(soap, data), 0) || soap_put_ns1__sendCipherInonsenseSOAP(soap, data, "ns1:sendCipherInonsenseSOAP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendCipherInonsenseSOAP * SOAP_FMAC4 soap_get_ns1__sendCipherInonsenseSOAP(struct soap*, struct ns1__sendCipherInonsenseSOAP *, const char*, const char*);

#ifndef soap_read_ns1__sendCipherInonsenseSOAP
#define soap_read_ns1__sendCipherInonsenseSOAP(soap, data) ( ((data) ? (soap_default_ns1__sendCipherInonsenseSOAP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__sendCipherInonsenseSOAP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__sendCipherInonsenseSOAP
#define soap_GET_ns1__sendCipherInonsenseSOAP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__sendCipherInonsenseSOAP(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__sendCipherInonsenseSOAP
#define soap_POST_recv_ns1__sendCipherInonsenseSOAP(soap, data) ( soap_read_ns1__sendCipherInonsenseSOAP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__sendCipherInonsenseSOAPResponse_DEFINED
#define SOAP_TYPE_ns1__sendCipherInonsenseSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendCipherInonsenseSOAPResponse(struct soap*, struct ns1__sendCipherInonsenseSOAPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendCipherInonsenseSOAPResponse(struct soap*, const struct ns1__sendCipherInonsenseSOAPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendCipherInonsenseSOAPResponse(struct soap*, const char*, int, const struct ns1__sendCipherInonsenseSOAPResponse *, const char*);
SOAP_FMAC3 struct ns1__sendCipherInonsenseSOAPResponse * SOAP_FMAC4 soap_in_ns1__sendCipherInonsenseSOAPResponse(struct soap*, const char*, struct ns1__sendCipherInonsenseSOAPResponse *, const char*);

SOAP_FMAC3 struct ns1__sendCipherInonsenseSOAPResponse * SOAP_FMAC4 soap_new_ns1__sendCipherInonsenseSOAPResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendCipherInonsenseSOAPResponse(struct soap*, const struct ns1__sendCipherInonsenseSOAPResponse *, const char*, const char*);

#ifndef soap_write_ns1__sendCipherInonsenseSOAPResponse
#define soap_write_ns1__sendCipherInonsenseSOAPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendCipherInonsenseSOAPResponse(soap, data), 0) || soap_put_ns1__sendCipherInonsenseSOAPResponse(soap, data, "ns1:sendCipherInonsenseSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__sendCipherInonsenseSOAPResponse
#define soap_PUT_ns1__sendCipherInonsenseSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__sendCipherInonsenseSOAPResponse(soap, data), 0) || soap_put_ns1__sendCipherInonsenseSOAPResponse(soap, data, "ns1:sendCipherInonsenseSOAPResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__sendCipherInonsenseSOAPResponse
#define soap_POST_send_ns1__sendCipherInonsenseSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__sendCipherInonsenseSOAPResponse(soap, data), 0) || soap_put_ns1__sendCipherInonsenseSOAPResponse(soap, data, "ns1:sendCipherInonsenseSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendCipherInonsenseSOAPResponse * SOAP_FMAC4 soap_get_ns1__sendCipherInonsenseSOAPResponse(struct soap*, struct ns1__sendCipherInonsenseSOAPResponse *, const char*, const char*);

#ifndef soap_read_ns1__sendCipherInonsenseSOAPResponse
#define soap_read_ns1__sendCipherInonsenseSOAPResponse(soap, data) ( ((data) ? (soap_default_ns1__sendCipherInonsenseSOAPResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__sendCipherInonsenseSOAPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__sendCipherInonsenseSOAPResponse
#define soap_GET_ns1__sendCipherInonsenseSOAPResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__sendCipherInonsenseSOAPResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__sendCipherInonsenseSOAPResponse
#define soap_POST_recv_ns1__sendCipherInonsenseSOAPResponse(soap, data) ( soap_read_ns1__sendCipherInonsenseSOAPResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__getPublicKeySOAP_DEFINED
#define SOAP_TYPE_ns1__getPublicKeySOAP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getPublicKeySOAP(struct soap*, struct ns1__getPublicKeySOAP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getPublicKeySOAP(struct soap*, const struct ns1__getPublicKeySOAP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getPublicKeySOAP(struct soap*, const char*, int, const struct ns1__getPublicKeySOAP *, const char*);
SOAP_FMAC3 struct ns1__getPublicKeySOAP * SOAP_FMAC4 soap_in_ns1__getPublicKeySOAP(struct soap*, const char*, struct ns1__getPublicKeySOAP *, const char*);

SOAP_FMAC3 struct ns1__getPublicKeySOAP * SOAP_FMAC4 soap_new_ns1__getPublicKeySOAP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getPublicKeySOAP(struct soap*, const struct ns1__getPublicKeySOAP *, const char*, const char*);

#ifndef soap_write_ns1__getPublicKeySOAP
#define soap_write_ns1__getPublicKeySOAP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__getPublicKeySOAP(soap, data), 0) || soap_put_ns1__getPublicKeySOAP(soap, data, "ns1:getPublicKeySOAP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__getPublicKeySOAP
#define soap_PUT_ns1__getPublicKeySOAP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__getPublicKeySOAP(soap, data), 0) || soap_put_ns1__getPublicKeySOAP(soap, data, "ns1:getPublicKeySOAP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__getPublicKeySOAP
#define soap_POST_send_ns1__getPublicKeySOAP(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__getPublicKeySOAP(soap, data), 0) || soap_put_ns1__getPublicKeySOAP(soap, data, "ns1:getPublicKeySOAP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__getPublicKeySOAP * SOAP_FMAC4 soap_get_ns1__getPublicKeySOAP(struct soap*, struct ns1__getPublicKeySOAP *, const char*, const char*);

#ifndef soap_read_ns1__getPublicKeySOAP
#define soap_read_ns1__getPublicKeySOAP(soap, data) ( ((data) ? (soap_default_ns1__getPublicKeySOAP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__getPublicKeySOAP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__getPublicKeySOAP
#define soap_GET_ns1__getPublicKeySOAP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__getPublicKeySOAP(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__getPublicKeySOAP
#define soap_POST_recv_ns1__getPublicKeySOAP(soap, data) ( soap_read_ns1__getPublicKeySOAP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__getPublicKeySOAPResponse_DEFINED
#define SOAP_TYPE_ns1__getPublicKeySOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getPublicKeySOAPResponse(struct soap*, struct ns1__getPublicKeySOAPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getPublicKeySOAPResponse(struct soap*, const struct ns1__getPublicKeySOAPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getPublicKeySOAPResponse(struct soap*, const char*, int, const struct ns1__getPublicKeySOAPResponse *, const char*);
SOAP_FMAC3 struct ns1__getPublicKeySOAPResponse * SOAP_FMAC4 soap_in_ns1__getPublicKeySOAPResponse(struct soap*, const char*, struct ns1__getPublicKeySOAPResponse *, const char*);

SOAP_FMAC3 struct ns1__getPublicKeySOAPResponse * SOAP_FMAC4 soap_new_ns1__getPublicKeySOAPResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getPublicKeySOAPResponse(struct soap*, const struct ns1__getPublicKeySOAPResponse *, const char*, const char*);

#ifndef soap_write_ns1__getPublicKeySOAPResponse
#define soap_write_ns1__getPublicKeySOAPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__getPublicKeySOAPResponse(soap, data), 0) || soap_put_ns1__getPublicKeySOAPResponse(soap, data, "ns1:getPublicKeySOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__getPublicKeySOAPResponse
#define soap_PUT_ns1__getPublicKeySOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__getPublicKeySOAPResponse(soap, data), 0) || soap_put_ns1__getPublicKeySOAPResponse(soap, data, "ns1:getPublicKeySOAPResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__getPublicKeySOAPResponse
#define soap_POST_send_ns1__getPublicKeySOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__getPublicKeySOAPResponse(soap, data), 0) || soap_put_ns1__getPublicKeySOAPResponse(soap, data, "ns1:getPublicKeySOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__getPublicKeySOAPResponse * SOAP_FMAC4 soap_get_ns1__getPublicKeySOAPResponse(struct soap*, struct ns1__getPublicKeySOAPResponse *, const char*, const char*);

#ifndef soap_read_ns1__getPublicKeySOAPResponse
#define soap_read_ns1__getPublicKeySOAPResponse(soap, data) ( ((data) ? (soap_default_ns1__getPublicKeySOAPResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__getPublicKeySOAPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__getPublicKeySOAPResponse
#define soap_GET_ns1__getPublicKeySOAPResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__getPublicKeySOAPResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__getPublicKeySOAPResponse
#define soap_POST_recv_ns1__getPublicKeySOAPResponse(soap, data) ( soap_read_ns1__getPublicKeySOAPResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__getNonsenseSOAP_DEFINED
#define SOAP_TYPE_ns1__getNonsenseSOAP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getNonsenseSOAP(struct soap*, struct ns1__getNonsenseSOAP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getNonsenseSOAP(struct soap*, const struct ns1__getNonsenseSOAP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getNonsenseSOAP(struct soap*, const char*, int, const struct ns1__getNonsenseSOAP *, const char*);
SOAP_FMAC3 struct ns1__getNonsenseSOAP * SOAP_FMAC4 soap_in_ns1__getNonsenseSOAP(struct soap*, const char*, struct ns1__getNonsenseSOAP *, const char*);

SOAP_FMAC3 struct ns1__getNonsenseSOAP * SOAP_FMAC4 soap_new_ns1__getNonsenseSOAP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getNonsenseSOAP(struct soap*, const struct ns1__getNonsenseSOAP *, const char*, const char*);

#ifndef soap_write_ns1__getNonsenseSOAP
#define soap_write_ns1__getNonsenseSOAP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__getNonsenseSOAP(soap, data), 0) || soap_put_ns1__getNonsenseSOAP(soap, data, "ns1:getNonsenseSOAP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__getNonsenseSOAP
#define soap_PUT_ns1__getNonsenseSOAP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__getNonsenseSOAP(soap, data), 0) || soap_put_ns1__getNonsenseSOAP(soap, data, "ns1:getNonsenseSOAP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__getNonsenseSOAP
#define soap_POST_send_ns1__getNonsenseSOAP(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__getNonsenseSOAP(soap, data), 0) || soap_put_ns1__getNonsenseSOAP(soap, data, "ns1:getNonsenseSOAP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__getNonsenseSOAP * SOAP_FMAC4 soap_get_ns1__getNonsenseSOAP(struct soap*, struct ns1__getNonsenseSOAP *, const char*, const char*);

#ifndef soap_read_ns1__getNonsenseSOAP
#define soap_read_ns1__getNonsenseSOAP(soap, data) ( ((data) ? (soap_default_ns1__getNonsenseSOAP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__getNonsenseSOAP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__getNonsenseSOAP
#define soap_GET_ns1__getNonsenseSOAP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__getNonsenseSOAP(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__getNonsenseSOAP
#define soap_POST_recv_ns1__getNonsenseSOAP(soap, data) ( soap_read_ns1__getNonsenseSOAP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__getNonsenseSOAPResponse_DEFINED
#define SOAP_TYPE_ns1__getNonsenseSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getNonsenseSOAPResponse(struct soap*, struct ns1__getNonsenseSOAPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getNonsenseSOAPResponse(struct soap*, const struct ns1__getNonsenseSOAPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getNonsenseSOAPResponse(struct soap*, const char*, int, const struct ns1__getNonsenseSOAPResponse *, const char*);
SOAP_FMAC3 struct ns1__getNonsenseSOAPResponse * SOAP_FMAC4 soap_in_ns1__getNonsenseSOAPResponse(struct soap*, const char*, struct ns1__getNonsenseSOAPResponse *, const char*);

SOAP_FMAC3 struct ns1__getNonsenseSOAPResponse * SOAP_FMAC4 soap_new_ns1__getNonsenseSOAPResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getNonsenseSOAPResponse(struct soap*, const struct ns1__getNonsenseSOAPResponse *, const char*, const char*);

#ifndef soap_write_ns1__getNonsenseSOAPResponse
#define soap_write_ns1__getNonsenseSOAPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__getNonsenseSOAPResponse(soap, data), 0) || soap_put_ns1__getNonsenseSOAPResponse(soap, data, "ns1:getNonsenseSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__getNonsenseSOAPResponse
#define soap_PUT_ns1__getNonsenseSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__getNonsenseSOAPResponse(soap, data), 0) || soap_put_ns1__getNonsenseSOAPResponse(soap, data, "ns1:getNonsenseSOAPResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__getNonsenseSOAPResponse
#define soap_POST_send_ns1__getNonsenseSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__getNonsenseSOAPResponse(soap, data), 0) || soap_put_ns1__getNonsenseSOAPResponse(soap, data, "ns1:getNonsenseSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__getNonsenseSOAPResponse * SOAP_FMAC4 soap_get_ns1__getNonsenseSOAPResponse(struct soap*, struct ns1__getNonsenseSOAPResponse *, const char*, const char*);

#ifndef soap_read_ns1__getNonsenseSOAPResponse
#define soap_read_ns1__getNonsenseSOAPResponse(soap, data) ( ((data) ? (soap_default_ns1__getNonsenseSOAPResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__getNonsenseSOAPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__getNonsenseSOAPResponse
#define soap_GET_ns1__getNonsenseSOAPResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__getNonsenseSOAPResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__getNonsenseSOAPResponse
#define soap_POST_recv_ns1__getNonsenseSOAPResponse(soap, data) ( soap_read_ns1__getNonsenseSOAPResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__requestConnectionSOAP_DEFINED
#define SOAP_TYPE_ns1__requestConnectionSOAP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__requestConnectionSOAP(struct soap*, struct ns1__requestConnectionSOAP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__requestConnectionSOAP(struct soap*, const struct ns1__requestConnectionSOAP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__requestConnectionSOAP(struct soap*, const char*, int, const struct ns1__requestConnectionSOAP *, const char*);
SOAP_FMAC3 struct ns1__requestConnectionSOAP * SOAP_FMAC4 soap_in_ns1__requestConnectionSOAP(struct soap*, const char*, struct ns1__requestConnectionSOAP *, const char*);

SOAP_FMAC3 struct ns1__requestConnectionSOAP * SOAP_FMAC4 soap_new_ns1__requestConnectionSOAP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__requestConnectionSOAP(struct soap*, const struct ns1__requestConnectionSOAP *, const char*, const char*);

#ifndef soap_write_ns1__requestConnectionSOAP
#define soap_write_ns1__requestConnectionSOAP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__requestConnectionSOAP(soap, data), 0) || soap_put_ns1__requestConnectionSOAP(soap, data, "ns1:requestConnectionSOAP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__requestConnectionSOAP
#define soap_PUT_ns1__requestConnectionSOAP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__requestConnectionSOAP(soap, data), 0) || soap_put_ns1__requestConnectionSOAP(soap, data, "ns1:requestConnectionSOAP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__requestConnectionSOAP
#define soap_POST_send_ns1__requestConnectionSOAP(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__requestConnectionSOAP(soap, data), 0) || soap_put_ns1__requestConnectionSOAP(soap, data, "ns1:requestConnectionSOAP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__requestConnectionSOAP * SOAP_FMAC4 soap_get_ns1__requestConnectionSOAP(struct soap*, struct ns1__requestConnectionSOAP *, const char*, const char*);

#ifndef soap_read_ns1__requestConnectionSOAP
#define soap_read_ns1__requestConnectionSOAP(soap, data) ( ((data) ? (soap_default_ns1__requestConnectionSOAP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__requestConnectionSOAP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__requestConnectionSOAP
#define soap_GET_ns1__requestConnectionSOAP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__requestConnectionSOAP(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__requestConnectionSOAP
#define soap_POST_recv_ns1__requestConnectionSOAP(soap, data) ( soap_read_ns1__requestConnectionSOAP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__requestConnectionSOAPResponse_DEFINED
#define SOAP_TYPE_ns1__requestConnectionSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__requestConnectionSOAPResponse(struct soap*, struct ns1__requestConnectionSOAPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__requestConnectionSOAPResponse(struct soap*, const struct ns1__requestConnectionSOAPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__requestConnectionSOAPResponse(struct soap*, const char*, int, const struct ns1__requestConnectionSOAPResponse *, const char*);
SOAP_FMAC3 struct ns1__requestConnectionSOAPResponse * SOAP_FMAC4 soap_in_ns1__requestConnectionSOAPResponse(struct soap*, const char*, struct ns1__requestConnectionSOAPResponse *, const char*);

SOAP_FMAC3 struct ns1__requestConnectionSOAPResponse * SOAP_FMAC4 soap_new_ns1__requestConnectionSOAPResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__requestConnectionSOAPResponse(struct soap*, const struct ns1__requestConnectionSOAPResponse *, const char*, const char*);

#ifndef soap_write_ns1__requestConnectionSOAPResponse
#define soap_write_ns1__requestConnectionSOAPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__requestConnectionSOAPResponse(soap, data), 0) || soap_put_ns1__requestConnectionSOAPResponse(soap, data, "ns1:requestConnectionSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__requestConnectionSOAPResponse
#define soap_PUT_ns1__requestConnectionSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__requestConnectionSOAPResponse(soap, data), 0) || soap_put_ns1__requestConnectionSOAPResponse(soap, data, "ns1:requestConnectionSOAPResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__requestConnectionSOAPResponse
#define soap_POST_send_ns1__requestConnectionSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__requestConnectionSOAPResponse(soap, data), 0) || soap_put_ns1__requestConnectionSOAPResponse(soap, data, "ns1:requestConnectionSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__requestConnectionSOAPResponse * SOAP_FMAC4 soap_get_ns1__requestConnectionSOAPResponse(struct soap*, struct ns1__requestConnectionSOAPResponse *, const char*, const char*);

#ifndef soap_read_ns1__requestConnectionSOAPResponse
#define soap_read_ns1__requestConnectionSOAPResponse(soap, data) ( ((data) ? (soap_default_ns1__requestConnectionSOAPResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__requestConnectionSOAPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__requestConnectionSOAPResponse
#define soap_GET_ns1__requestConnectionSOAPResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__requestConnectionSOAPResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__requestConnectionSOAPResponse
#define soap_POST_recv_ns1__requestConnectionSOAPResponse(soap, data) ( soap_read_ns1__requestConnectionSOAPResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__transferDataSOAP_DEFINED
#define SOAP_TYPE_ns1__transferDataSOAP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__transferDataSOAP(struct soap*, struct ns1__transferDataSOAP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__transferDataSOAP(struct soap*, const struct ns1__transferDataSOAP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__transferDataSOAP(struct soap*, const char*, int, const struct ns1__transferDataSOAP *, const char*);
SOAP_FMAC3 struct ns1__transferDataSOAP * SOAP_FMAC4 soap_in_ns1__transferDataSOAP(struct soap*, const char*, struct ns1__transferDataSOAP *, const char*);

SOAP_FMAC3 struct ns1__transferDataSOAP * SOAP_FMAC4 soap_new_ns1__transferDataSOAP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__transferDataSOAP(struct soap*, const struct ns1__transferDataSOAP *, const char*, const char*);

#ifndef soap_write_ns1__transferDataSOAP
#define soap_write_ns1__transferDataSOAP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__transferDataSOAP(soap, data), 0) || soap_put_ns1__transferDataSOAP(soap, data, "ns1:transferDataSOAP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__transferDataSOAP
#define soap_PUT_ns1__transferDataSOAP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__transferDataSOAP(soap, data), 0) || soap_put_ns1__transferDataSOAP(soap, data, "ns1:transferDataSOAP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__transferDataSOAP
#define soap_POST_send_ns1__transferDataSOAP(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__transferDataSOAP(soap, data), 0) || soap_put_ns1__transferDataSOAP(soap, data, "ns1:transferDataSOAP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__transferDataSOAP * SOAP_FMAC4 soap_get_ns1__transferDataSOAP(struct soap*, struct ns1__transferDataSOAP *, const char*, const char*);

#ifndef soap_read_ns1__transferDataSOAP
#define soap_read_ns1__transferDataSOAP(soap, data) ( ((data) ? (soap_default_ns1__transferDataSOAP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__transferDataSOAP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__transferDataSOAP
#define soap_GET_ns1__transferDataSOAP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__transferDataSOAP(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__transferDataSOAP
#define soap_POST_recv_ns1__transferDataSOAP(soap, data) ( soap_read_ns1__transferDataSOAP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__transferDataSOAPResponse_DEFINED
#define SOAP_TYPE_ns1__transferDataSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__transferDataSOAPResponse(struct soap*, struct ns1__transferDataSOAPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__transferDataSOAPResponse(struct soap*, const struct ns1__transferDataSOAPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__transferDataSOAPResponse(struct soap*, const char*, int, const struct ns1__transferDataSOAPResponse *, const char*);
SOAP_FMAC3 struct ns1__transferDataSOAPResponse * SOAP_FMAC4 soap_in_ns1__transferDataSOAPResponse(struct soap*, const char*, struct ns1__transferDataSOAPResponse *, const char*);

SOAP_FMAC3 struct ns1__transferDataSOAPResponse * SOAP_FMAC4 soap_new_ns1__transferDataSOAPResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__transferDataSOAPResponse(struct soap*, const struct ns1__transferDataSOAPResponse *, const char*, const char*);

#ifndef soap_write_ns1__transferDataSOAPResponse
#define soap_write_ns1__transferDataSOAPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__transferDataSOAPResponse(soap, data), 0) || soap_put_ns1__transferDataSOAPResponse(soap, data, "ns1:transferDataSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__transferDataSOAPResponse
#define soap_PUT_ns1__transferDataSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__transferDataSOAPResponse(soap, data), 0) || soap_put_ns1__transferDataSOAPResponse(soap, data, "ns1:transferDataSOAPResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__transferDataSOAPResponse
#define soap_POST_send_ns1__transferDataSOAPResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__transferDataSOAPResponse(soap, data), 0) || soap_put_ns1__transferDataSOAPResponse(soap, data, "ns1:transferDataSOAPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__transferDataSOAPResponse * SOAP_FMAC4 soap_get_ns1__transferDataSOAPResponse(struct soap*, struct ns1__transferDataSOAPResponse *, const char*, const char*);

#ifndef soap_read_ns1__transferDataSOAPResponse
#define soap_read_ns1__transferDataSOAPResponse(soap, data) ( ((data) ? (soap_default_ns1__transferDataSOAPResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__transferDataSOAPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__transferDataSOAPResponse
#define soap_GET_ns1__transferDataSOAPResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__transferDataSOAPResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__transferDataSOAPResponse
#define soap_POST_recv_ns1__transferDataSOAPResponse(soap, data) ( soap_read_ns1__transferDataSOAPResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE_ns1__NoSuchAlgorithmException_DEFINED
#define SOAP_TYPE_ns1__NoSuchAlgorithmException_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NoSuchAlgorithmException(struct soap*, struct ns1__NoSuchAlgorithmException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NoSuchAlgorithmException(struct soap*, const struct ns1__NoSuchAlgorithmException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NoSuchAlgorithmException(struct soap*, const char*, int, const struct ns1__NoSuchAlgorithmException *, const char*);
SOAP_FMAC3 struct ns1__NoSuchAlgorithmException * SOAP_FMAC4 soap_in_ns1__NoSuchAlgorithmException(struct soap*, const char*, struct ns1__NoSuchAlgorithmException *, const char*);

SOAP_FMAC3 struct ns1__NoSuchAlgorithmException * SOAP_FMAC4 soap_new_ns1__NoSuchAlgorithmException(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NoSuchAlgorithmException(struct soap*, const struct ns1__NoSuchAlgorithmException *, const char*, const char*);

#ifndef soap_write_ns1__NoSuchAlgorithmException
#define soap_write_ns1__NoSuchAlgorithmException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NoSuchAlgorithmException(soap, data), 0) || soap_put_ns1__NoSuchAlgorithmException(soap, data, "ns1:NoSuchAlgorithmException", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__NoSuchAlgorithmException
#define soap_PUT_ns1__NoSuchAlgorithmException(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_ns1__NoSuchAlgorithmException(soap, data), 0) || soap_put_ns1__NoSuchAlgorithmException(soap, data, "ns1:NoSuchAlgorithmException", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_ns1__NoSuchAlgorithmException
#define soap_POST_send_ns1__NoSuchAlgorithmException(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_ns1__NoSuchAlgorithmException(soap, data), 0) || soap_put_ns1__NoSuchAlgorithmException(soap, data, "ns1:NoSuchAlgorithmException", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NoSuchAlgorithmException * SOAP_FMAC4 soap_get_ns1__NoSuchAlgorithmException(struct soap*, struct ns1__NoSuchAlgorithmException *, const char*, const char*);

#ifndef soap_read_ns1__NoSuchAlgorithmException
#define soap_read_ns1__NoSuchAlgorithmException(soap, data) ( ((data) ? (soap_default_ns1__NoSuchAlgorithmException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__NoSuchAlgorithmException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__NoSuchAlgorithmException
#define soap_GET_ns1__NoSuchAlgorithmException(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__NoSuchAlgorithmException(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_ns1__NoSuchAlgorithmException
#define soap_POST_recv_ns1__NoSuchAlgorithmException(soap, data) ( soap_read_ns1__NoSuchAlgorithmException(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTons1__recieveOKSOAPResponse_DEFINED
#define SOAP_TYPE_PointerTons1__recieveOKSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__recieveOKSOAPResponse(struct soap*, struct ns1__recieveOKSOAPResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__recieveOKSOAPResponse(struct soap*, const char *, int, struct ns1__recieveOKSOAPResponse *const*, const char *);
SOAP_FMAC3 struct ns1__recieveOKSOAPResponse ** SOAP_FMAC4 soap_in_PointerTons1__recieveOKSOAPResponse(struct soap*, const char*, struct ns1__recieveOKSOAPResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__recieveOKSOAPResponse(struct soap*, struct ns1__recieveOKSOAPResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__recieveOKSOAPResponse ** SOAP_FMAC4 soap_get_PointerTons1__recieveOKSOAPResponse(struct soap*, struct ns1__recieveOKSOAPResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__sendLogHashCipherSOAPResponse_DEFINED
#define SOAP_TYPE_PointerTons1__sendLogHashCipherSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sendLogHashCipherSOAPResponse(struct soap*, struct ns1__sendLogHashCipherSOAPResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sendLogHashCipherSOAPResponse(struct soap*, const char *, int, struct ns1__sendLogHashCipherSOAPResponse *const*, const char *);
SOAP_FMAC3 struct ns1__sendLogHashCipherSOAPResponse ** SOAP_FMAC4 soap_in_PointerTons1__sendLogHashCipherSOAPResponse(struct soap*, const char*, struct ns1__sendLogHashCipherSOAPResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sendLogHashCipherSOAPResponse(struct soap*, struct ns1__sendLogHashCipherSOAPResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__sendLogHashCipherSOAPResponse ** SOAP_FMAC4 soap_get_PointerTons1__sendLogHashCipherSOAPResponse(struct soap*, struct ns1__sendLogHashCipherSOAPResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__sendCipherInonsenseSOAPResponse_DEFINED
#define SOAP_TYPE_PointerTons1__sendCipherInonsenseSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sendCipherInonsenseSOAPResponse(struct soap*, struct ns1__sendCipherInonsenseSOAPResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sendCipherInonsenseSOAPResponse(struct soap*, const char *, int, struct ns1__sendCipherInonsenseSOAPResponse *const*, const char *);
SOAP_FMAC3 struct ns1__sendCipherInonsenseSOAPResponse ** SOAP_FMAC4 soap_in_PointerTons1__sendCipherInonsenseSOAPResponse(struct soap*, const char*, struct ns1__sendCipherInonsenseSOAPResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sendCipherInonsenseSOAPResponse(struct soap*, struct ns1__sendCipherInonsenseSOAPResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__sendCipherInonsenseSOAPResponse ** SOAP_FMAC4 soap_get_PointerTons1__sendCipherInonsenseSOAPResponse(struct soap*, struct ns1__sendCipherInonsenseSOAPResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__getPublicKeySOAPResponse_DEFINED
#define SOAP_TYPE_PointerTons1__getPublicKeySOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getPublicKeySOAPResponse(struct soap*, struct ns1__getPublicKeySOAPResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getPublicKeySOAPResponse(struct soap*, const char *, int, struct ns1__getPublicKeySOAPResponse *const*, const char *);
SOAP_FMAC3 struct ns1__getPublicKeySOAPResponse ** SOAP_FMAC4 soap_in_PointerTons1__getPublicKeySOAPResponse(struct soap*, const char*, struct ns1__getPublicKeySOAPResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getPublicKeySOAPResponse(struct soap*, struct ns1__getPublicKeySOAPResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__getPublicKeySOAPResponse ** SOAP_FMAC4 soap_get_PointerTons1__getPublicKeySOAPResponse(struct soap*, struct ns1__getPublicKeySOAPResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__getNonsenseSOAPResponse_DEFINED
#define SOAP_TYPE_PointerTons1__getNonsenseSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getNonsenseSOAPResponse(struct soap*, struct ns1__getNonsenseSOAPResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getNonsenseSOAPResponse(struct soap*, const char *, int, struct ns1__getNonsenseSOAPResponse *const*, const char *);
SOAP_FMAC3 struct ns1__getNonsenseSOAPResponse ** SOAP_FMAC4 soap_in_PointerTons1__getNonsenseSOAPResponse(struct soap*, const char*, struct ns1__getNonsenseSOAPResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getNonsenseSOAPResponse(struct soap*, struct ns1__getNonsenseSOAPResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__getNonsenseSOAPResponse ** SOAP_FMAC4 soap_get_PointerTons1__getNonsenseSOAPResponse(struct soap*, struct ns1__getNonsenseSOAPResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__requestConnectionSOAPResponse_DEFINED
#define SOAP_TYPE_PointerTons1__requestConnectionSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__requestConnectionSOAPResponse(struct soap*, struct ns1__requestConnectionSOAPResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__requestConnectionSOAPResponse(struct soap*, const char *, int, struct ns1__requestConnectionSOAPResponse *const*, const char *);
SOAP_FMAC3 struct ns1__requestConnectionSOAPResponse ** SOAP_FMAC4 soap_in_PointerTons1__requestConnectionSOAPResponse(struct soap*, const char*, struct ns1__requestConnectionSOAPResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__requestConnectionSOAPResponse(struct soap*, struct ns1__requestConnectionSOAPResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__requestConnectionSOAPResponse ** SOAP_FMAC4 soap_get_PointerTons1__requestConnectionSOAPResponse(struct soap*, struct ns1__requestConnectionSOAPResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__transferDataSOAPResponse_DEFINED
#define SOAP_TYPE_PointerTons1__transferDataSOAPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__transferDataSOAPResponse(struct soap*, struct ns1__transferDataSOAPResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__transferDataSOAPResponse(struct soap*, const char *, int, struct ns1__transferDataSOAPResponse *const*, const char *);
SOAP_FMAC3 struct ns1__transferDataSOAPResponse ** SOAP_FMAC4 soap_in_PointerTons1__transferDataSOAPResponse(struct soap*, const char*, struct ns1__transferDataSOAPResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__transferDataSOAPResponse(struct soap*, struct ns1__transferDataSOAPResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__transferDataSOAPResponse ** SOAP_FMAC4 soap_get_PointerTons1__transferDataSOAPResponse(struct soap*, struct ns1__transferDataSOAPResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__NoSuchAlgorithmException_DEFINED
#define SOAP_TYPE_PointerTons1__NoSuchAlgorithmException_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__NoSuchAlgorithmException(struct soap*, struct ns1__NoSuchAlgorithmException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__NoSuchAlgorithmException(struct soap*, const char *, int, struct ns1__NoSuchAlgorithmException *const*, const char *);
SOAP_FMAC3 struct ns1__NoSuchAlgorithmException ** SOAP_FMAC4 soap_in_PointerTons1__NoSuchAlgorithmException(struct soap*, const char*, struct ns1__NoSuchAlgorithmException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__NoSuchAlgorithmException(struct soap*, struct ns1__NoSuchAlgorithmException *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__NoSuchAlgorithmException ** SOAP_FMAC4 soap_get_PointerTons1__NoSuchAlgorithmException(struct soap*, struct ns1__NoSuchAlgorithmException **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
